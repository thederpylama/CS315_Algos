1. Max: 2^h Min: 2^(h + 1) - 1

2. n = 2^h
   lg(n) = lg(2^h)
   lg(n) = h

3. It would be the furthest right leaf on the bottom layer of the heap

4. It is not a max-heap because in the current arrangement 6 would have to be a parent of 7, which violates the max-heap property

5. A = [ 27 , 17 , 3 , 16 , 13 , 10 , 1 , 5 , 7 , 12 , 4 , 8 , 9 , 0 ]
   Max-Heapify(A, 3)

                        27
                 17           |03|
             16      13    10      01
           05  07  12 04  08 09  00

                        27
                 17            10
             16      13   |03|     01
           05  07  12 04  08 09  00

                        27
                 17            10
             16      13    09      01
           05  07  12 04  08 03  00
6. Nothing happens to the heap when A[i] is larger than its children, as the sub heap already satisfies max heap

7. Nothing happens since all nodes i > A.heap-size/2 are leaves and don't have children

8. Going from floor(A.length/2) to 1 rather than from 1 to floor(A.length/2) ensures that all subtrees are sorted as it works through the heap.
   Starting the other way would put one path of nodes in order, but would not guarantee a fully sorted heap.

9.
                        15
                 13            09
             05      12    08      07
           04  00  06 02  01
           max = 15
                        01
                 13            09
             05      12    08      07
           04  00  06 02
                        13
                 01            09
             05      12    08      07
           04  00  06 02
                        13
                 12            09
             05      01    08      07
           04  00  06 02
                        13
                 12            09
             05      01    08      07
           04  00  06 02
                        13
                 12            09
             05      06    08      07
           04  00  01 02

10.
                        15
                 13            09
             05      12    08      07
           04  00  06 02  01 -inf
                      15
                 13            09
             05      12    08      07
           04  00  06 02  01 10
                        15
                 13            09
             05      12    10      07
           04  00  06 02  01 08
                        15
                 13            10
             05      12    09      07
           04  00  06 02  01 08
11.
     https://github.com/thederpylama/CS315_Algos/blob/main/HeapHHApportionment-inclass.ipynb
